{{ if .Values.ingress.crt }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ingress.secret.name }}
  namespace: {{ .Values.ingress.secret.namespace }}
data:
  tls.crt: {{ .Values.ingress.crt | b64enc | quote }}
  tls.key: {{ .Values.ingress.key | b64enc | quote }}
{{ end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "direktiv.fullname" . }}-ingress
  labels:
    {{- include "direktiv.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingressClass }}
spec:
  {{ if .Values.ingress.crt }}
  tls:
  - hosts:
      - {{ .Values.ingress.host }}
      {{ if .Values.ingress.auth.enabled }}
      - {{ .Values.ingress.auth.host }}
      {{ end }}
    secretName: {{ .Values.ingress.secret.name }}
  {{ end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: {{ include "direktiv.fullname" . }}-api-service
              port:
                number: 8080
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ include "direktiv.fullname" . }}-ui
              port:
                number: 80
  {{ if .Values.ingress.auth.enabled }}
  - host: {{ .Values.ingress.auth.host }}
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ .Values.ingress.auth.service }}
              port:
                number: {{ .Values.ingress.auth.port }}
  {{ end }}
